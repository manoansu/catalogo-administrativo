buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id('java-conventions')
    id('jacoco-report-aggregation')
    id('application')
    id('org.springframework.boot')
    id('io.spring.dependency-management')
    id('org.flywaydb.flyway') version('9.11.0')
}

group = 'pt.amane.infrastructure'
version = '0.0.1-SNAPSHOT'

bootJar {
    archiveFileName.set('application.jar')
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'io.vavr:vavr:0.10.6'

    implementation("com.google.cloud:google-cloud-storage:2.56.0")
    implementation("com.google.guava:guava:33.4.8-jre")

    implementation("org.springdoc:springdoc-openapi-webmvc-core:1.8.0")
    implementation("org.springdoc:springdoc-openapi-ui:1.8.0")

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.16.1')

    implementation('mysql:mysql-connector-java:8.0.27')
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.amqp:spring-rabbit-test:3.2.6")


    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')

    testImplementation('org.testcontainers:testcontainers:1.20.6')
    testImplementation('org.testcontainers:mysql:1.20.6')
    testImplementation('org.testcontainers:junit-jupiter:1.20.6')

    testImplementation 'com.h2database:h2'

}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}

test {
    useJUnitPlatform()
}